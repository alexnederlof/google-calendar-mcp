name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node

      # Only run the following steps if a release was created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: |
          npm ci
          # Force reinstall optional dependencies (fixes rollup platform binaries on Linux)
          npm install --force @rollup/rollup-linux-x64-gnu 2>/dev/null || true

      - name: Run tests
        if: ${{ steps.release.outputs.release_created }}
        run: npm test

      - name: Build project
        if: ${{ steps.release.outputs.release_created }}
        run: npm run build

      - name: Publish to NPM
        if: ${{ steps.release.outputs.release_created }}
        run: |
          VERSION="${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"

          # Check if this is a prerelease version (contains -, like v1.3.0-beta.0)
          if [[ "$VERSION" == *"-"* ]]; then
            echo "Publishing prerelease version $VERSION with beta tag"
            npm publish --provenance --access public --tag beta
          else
            echo "Publishing stable version $VERSION with latest tag"
            npm publish --provenance --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
